<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:vsui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
					xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
					xmlns:vsimaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
					xmlns:vsimagecat="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
					xmlns:converters="clr-namespace:CodeConnections.Presentation.Converters"
					xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
					mc:Ignorable="d">
	<Style x:Key="{x:Type ContextMenu}"
		   TargetType="{x:Type ContextMenu}">
		<Setter Property="Background"
				Value="{DynamicResource {x:Static vsui:EnvironmentColors.CommandBarMenuBackgroundGradientBrushKey}}" />
		<Setter Property="Foreground"
				Value="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarTextActiveKey}}" />
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="BorderBrush"
				Value="{DynamicResource {x:Static vsui:EnvironmentColors.CommandBarMenuBorderBrushKey}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ContextMenu}">
					<theme:SystemDropShadowChrome Name="Shdw"
												  Color="Transparent"
												  SnapsToDevicePixels="true">
						<Border Name="ContextMenuBorder"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}">
							<ScrollViewer Name="ContextMenuScrollViewer"
										  Grid.ColumnSpan="2"
										  Margin="1,0"
										  Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
								<Grid RenderOptions.ClearTypeHint="Enabled">
									<Canvas Height="0"
											Width="0"
											HorizontalAlignment="Left"
											VerticalAlignment="Top">
										<Rectangle Name="OpaqueRect"
												   Height="{Binding ElementName=ContextMenuBorder,Path=ActualHeight}"
												   Width="{Binding ElementName=ContextMenuBorder,Path=ActualWidth}"
												   Fill="{Binding ElementName=ContextMenuBorder,Path=Background}" />
									</Canvas>
									<Rectangle Fill="Transparent"
											   HorizontalAlignment="Left"
											   Width="28"
											   Margin="1,2"
											   RadiusX="2"
											   RadiusY="2" />
									<Rectangle HorizontalAlignment="Left"
											   Width="1"
											   Margin="29,2,0,2"
											   Fill="Transparent" />
									<Rectangle HorizontalAlignment="Left"
											   Width="1"
											   Margin="30,2,0,2"
											   Fill="Transparent" />
									<ItemsPresenter Name="ItemsPresenter"
													Margin="{TemplateBinding Padding}"
													KeyboardNavigation.DirectionalNavigation="Cycle"
													SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								</Grid>
							</ScrollViewer>
						</Border>
					</theme:SystemDropShadowChrome>
					<ControlTemplate.Triggers>
						<Trigger Property="HasDropShadow"
								 Value="true">
							<Setter TargetName="Shdw"
									Property="Margin"
									Value="0,0,5,5" />
							<Setter TargetName="Shdw"
									Property="Color"
									Value="#71000000" />
						</Trigger>
						<Trigger SourceName="ContextMenuScrollViewer"
								 Property="ScrollViewer.CanContentScroll"
								 Value="false">
							<Setter TargetName="OpaqueRect"
									Property="Canvas.Top"
									Value="{Binding ElementName=ContextMenuScrollViewer, Path=VerticalOffset}" />
							<Setter TargetName="OpaqueRect"
									Property="Canvas.Left"
									Value="{Binding ElementName=ContextMenuScrollViewer, Path=HorizontalOffset}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
