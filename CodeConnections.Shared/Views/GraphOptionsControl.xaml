<UserControl x:Class="CodeConnections.Views.GraphOptionsControl"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:local="clr-namespace:CodeConnections.Views"
			 xmlns:ext="clr-namespace:CodeConnections.Views.Behaviours"
			 xmlns:vsimaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
			 xmlns:vsimagecat="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
			 xmlns:vstheming="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Imaging"
			 xmlns:converters="clr-namespace:CodeConnections.Presentation.Converters"
			 mc:Ignorable="d">
	<d:UserControl.DataContext>
		<DependencyGraphToolWindowViewModel xmlns="clr-namespace:CodeConnections.Presentation" />
	</d:UserControl.DataContext>
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="Styles/Colors.xaml" />
				<ResourceDictionary Source="Styles/Button.xaml" />
				<ResourceDictionary Source="Styles/CheckBox.xaml" />
				<ResourceDictionary Source="Styles/ComboBox.xaml" />
				<ResourceDictionary Source="Styles/Expander.xaml" />
				<ResourceDictionary Source="Styles/ListBox.xaml" />
				<ResourceDictionary Source="Styles/ListBoxItem.xaml" />
				<ResourceDictionary Source="Styles/Path.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<Style x:Key="SeparatorRectangleStyle"
				   TargetType="Rectangle">
				<Setter Property="Width"
						Value="1" />
				<Setter Property="VerticalAlignment"
						Value="Stretch" />
				<Setter Property="Margin"
						Value="3" />
				<Setter Property="Fill"
						Value="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarToolBarSeparatorKey}}" />
			</Style>
			<Style x:Key="ArrowSeparatorRectangleStyle"
				   TargetType="Rectangle">
				<Setter Property="Width"
						Value="1" />
				<Setter Property="VerticalAlignment"
						Value="Stretch" />
				<Setter Property="Fill"
						Value="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarToolBarSeparatorKey}}" />
			</Style>
			<converters:BooleanToDoubleConverter TrueValue="1"
												 FalseValue="0"
												 x:Key="BooleanToOpacityConverter" />
			<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
			<converters:IncludeActiveModeToDescriptionConverter x:Key="IncludeActiveModeToDescriptionConverter" />
			<converters:ImportantTypesModeToDescriptionConverter x:Key="ImportantTypesModeToDescriptionConverter" />
			<converters:ExportOptionToLabelConverter x:Key="ExportOptionToLabelConverter" />
		</ResourceDictionary>
	</UserControl.Resources>
	<Border Padding="5"
			Background="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarGradientKey}}"
			vstheming:ImageThemingUtilities.ImageBackgroundColor="{DynamicResource {x:Static vsshell:VsColors.CommandBarGradientMiddleKey}}"
			BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBorderKey}}"
			BorderThickness="0"
			CornerRadius="5">
		<StackPanel>
			<!--Above-the-fold panel-->
			<WrapPanel Margin="0,0,0,15">
				<CheckBox Style="{StaticResource HighlightCheckBoxStyle}"
						  x:Name="IsActiveAlwaysIncludedCheckBox"
						  HorizontalAlignment="Left"
						  Margin="3"
						  ToolTip="Always include active document in graph"
						  IsChecked="{Binding IsActiveAlwaysIncluded}">
					<StackPanel Orientation="Horizontal">
						<vsimaging:CrispImage Width="16"
											  Height="16"
											  Moniker="{x:Static vsimagecat:KnownMonikers.Lock}" />
						<Rectangle Style="{StaticResource ArrowSeparatorRectangleStyle}"
								   Margin="1,0,0,0"
								   Opacity="{Binding ElementName=IsActiveAlwaysIncludedCheckBox, Path=IsMouseOver, Converter={StaticResource BooleanToOpacityConverter}}" />
						<ComboBox Style="{DynamicResource ArrowOnlyComboBoxStyle}"
								  ItemsSource="{Binding IncludeActiveModes}"
								  SelectedItem="{Binding SelectedIncludeActiveMode, Mode=TwoWay}">
							<ComboBox.ItemTemplate>
								<DataTemplate>
									<TextBlock Text="{Binding Converter={StaticResource IncludeActiveModeToDescriptionConverter}}" />
								</DataTemplate>
							</ComboBox.ItemTemplate>
						</ComboBox>
					</StackPanel>
				</CheckBox>
				<CheckBox Style="{StaticResource HighlightCheckBoxStyle}"
						  HorizontalAlignment="Left"
						  Margin="3"
						  ToolTip="Git Mode"
						  IsChecked="{Binding IsGitModeEnabled}">
					<vsimaging:CrispImage Width="16"
										  Height="16"
										  Moniker="{x:Static vsimagecat:KnownMonikers.Git}" />
				</CheckBox>

				<CheckBox Style="{StaticResource HighlightCheckBoxStyle}"
						  x:Name="ImportantTypesCheckBox"
						  HorizontalAlignment="Left"
						  Margin="3"
						  ToolTip="Top Types Mode"
						  IsChecked="{Binding IsImportantTypesModeEnabled}">
					<StackPanel Orientation="Horizontal">
						<Path Width="16"
							  Height="16"
							  Fill="{StaticResource ImportantTypesIconBrush}"
							  Data="{StaticResource ImportantTypesIconPathData}" />
						<Rectangle Style="{StaticResource ArrowSeparatorRectangleStyle}"
								   Margin="1,0,0,0"
								   Opacity="{Binding ElementName=ImportantTypesCheckBox, Path=IsMouseOver, Converter={StaticResource BooleanToOpacityConverter}}" />
						<ComboBox Style="{DynamicResource ArrowOnlyComboBoxStyle}"
								  ItemsSource="{Binding ImportantTypesModes}"
								  SelectedItem="{Binding SelectedImportantTypesMode, Mode=TwoWay}">
							<ComboBox.ItemTemplate>
								<DataTemplate>
									<TextBlock Text="{Binding Converter={StaticResource ImportantTypesModeToDescriptionConverter}}" />
								</DataTemplate>
							</ComboBox.ItemTemplate>
						</ComboBox>
					</StackPanel>
				</CheckBox>

				<Rectangle Style="{StaticResource SeparatorRectangleStyle}" />

				<ListBox Style="{StaticResource ListBoxSimpleHorizontalStyle}"
						 Margin="5"
						 ItemsSource="{Binding LayoutModes}"
						 SelectedItem="{Binding LayoutMode, Mode=TwoWay}"
						 ItemContainerStyle="{StaticResource ListBoxItemLayoutModeStyle}" />

				<Rectangle Style="{StaticResource SeparatorRectangleStyle}" />

				<ComboBox Style="{StaticResource ExportComboBoxStyle}"
						  Margin="3,0"
						  ext:SelectorExtensions.ItemClickCommand="{Binding ExportCommand}"
						  ItemsSource="{Binding ExportOptions}">
					<ComboBox.ItemTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Converter={StaticResource ExportOptionToLabelConverter}}" />
						</DataTemplate>
					</ComboBox.ItemTemplate>
				</ComboBox>

				<Rectangle Style="{StaticResource SeparatorRectangleStyle}" />

				<Button Style="{StaticResource IconButtonStyle}"
						HorizontalAlignment="Left"
						VerticalAlignment="Top"
						Margin="3"
						ToolTip="Clear Graph"
						Command="{Binding ClearRootsCommand}">
					<vsimaging:CrispImage Width="16"
										  Height="16"
										  Moniker="{x:Static vsimagecat:KnownMonikers.Cancel}" />
				</Button>
			</WrapPanel>

			<!--Additional options-->
			<Expander Style="{StaticResource OptionsExpanderStyle}">
				<Expander.Header>
					<vsimaging:CrispImage Grid.Column="1"
										  Width="16"
										  Height="16"
										  Margin="2,2,3,2"
										  Moniker="{x:Static vsimagecat:KnownMonikers.Settings}" />
				</Expander.Header>
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<TextBlock Grid.Row="0"
							   Foreground="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarTextActiveKey}}"
							   Text="Included projects:"
							   Margin="0,8,0,5" />
					<StackPanel Margin="18,0,0,1"
								Grid.Row="1"
								Orientation="Horizontal">
						<TextBlock>
						<Hyperlink Command="{Binding DeselectAllProjectsCommand}">Deselect all</Hyperlink>
						</TextBlock>
						<TextBlock Margin="8,0,0,0">
						<Hyperlink Command="{Binding SelectAllProjectsCommand}">Select all</Hyperlink>
						</TextBlock>
					</StackPanel>
					<ListView Grid.Row="2"
							  Margin="0,0,0,12"
							  MaxHeight="300"
							  ext:MultiSelection.ItemsSource="{Binding Projects}"
							  DisplayMemberPath="ProjectName"
							  ext:MultiSelection.InitialSelectionState="Selected"
							  VerticalAlignment="Top" />
					<CheckBox Grid.Row="3"
							  Margin="0,8,0,0"
							  Foreground="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarTextActiveKey}}"
							  Content="Include generated"
							  ToolTip="Include types defined exclusively in generated code?"
							  IsChecked="{Binding IncludePureGenerated, Mode=TwoWay}" />
					<CheckBox Grid.Row="4"
							  Margin="0,8,0,0"
							  Foreground="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarTextActiveKey}}"
							  Content="Include nested classes"
							  ToolTip="Include nested classes?"
							  IsChecked="{Binding IncludeNestedTypes, Mode=TwoWay}" />
					<TextBlock Grid.Row="5"
							   Text="Number of top types to show"
							   Margin="0,12,0,0" />
					<ComboBox Grid.Row="6"
							  Margin="0,2,0,0"
							  HorizontalAlignment="Left"
							  MinWidth="60"
							  ItemsSource="{Binding NumberOfImportantTypesPresets}"
							  SelectedItem="{Binding NumberOfImportantTypesRequested, Mode=TwoWay}" />
					<local:DebugFeaturesControl Grid.Row="7"
												Foreground="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarTextActiveKey}}"
												Visibility="{Binding EnableDebugFeatures, Converter={StaticResource BooleanToVisibilityConverter}}"
												Margin="0,32,0,0" />
				</Grid>
			</Expander>
		</StackPanel>
	</Border>
</UserControl>
