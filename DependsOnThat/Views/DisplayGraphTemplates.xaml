<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:graphControls="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls"
					xmlns:graphBehaviours="clr-namespace:GraphSharp.AttachedBehaviours;assembly=GraphSharp.Controls"
					xmlns:graphConverters="clr-namespace:GraphSharp.Converters;assembly=GraphSharp.Controls"
					xmlns:local="clr-namespace:DependsOnThat.Views"
					xmlns:converters="clr-namespace:DependsOnThat.Presentation.Converters"
					xmlns:presentation="clr-namespace:DependsOnThat.Presentation"
					mc:Ignorable="d">

	<!--TODO: should use editor colour scheme https://stackoverflow.com/questions/18913208/colors-in-visual-studio-extension-->
	<converters:DisplayNodeBackgroundConverter x:Key="DisplayNodeBackgroundConverter"
											   DefaultBrush="LightGray"
											   RootNodeBrush="LimeGreen" />
	<DataTemplate DataType="{x:Type presentation:DisplayNode}">
		<Border CornerRadius="5"
				Background="{Binding Converter={StaticResource DisplayNodeBackgroundConverter}}"
				BorderBrush="Black"
				BorderThickness="1">
			<TextBlock Text="{Binding DisplayString}" />
		</Border>
	</DataTemplate>
	<DataTemplate DataType="{x:Type presentation:DisplayEdge}">
		<TextBlock Text="{Binding Label}" />
	</DataTemplate>

	<graphConverters:EdgeRouteToPathConverter x:Key="RouteToPathConverter" />

	<Style TargetType="{x:Type graphControls:VertexControl}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type graphControls:VertexControl}">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							ToolTip="{TemplateBinding ToolTip}">
						<ContentPresenter Content="{TemplateBinding Vertex}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="graphControls:GraphElementBehaviour.HighlightTrigger"
				Value="{Binding RelativeSource={RelativeSource Self},Path=IsMouseOver}" />
		<Setter Property="graphBehaviours:DragBehaviour.IsDragEnabled"
				Value="True" />
		<Setter Property="graphBehaviours:DragBehaviour.X"
				Value="{Binding RelativeSource={RelativeSource Self},Path=(graphControls:GraphCanvas.X),Mode=TwoWay}" />
		<Setter Property="graphBehaviours:DragBehaviour.Y"
				Value="{Binding RelativeSource={RelativeSource Self},Path=(graphControls:GraphCanvas.Y),Mode=TwoWay}" />
		<Setter Property="BorderThickness"
				Value="2" />
		<Setter Property="BorderBrush"
				Value="Black" />
		<Style.Triggers>
			<Trigger Property="graphControls:GraphElementBehaviour.IsHighlighted"
					 Value="True">
				<Setter Property="BorderBrush"
						Value="Orange" />
				<Setter Property="BorderThickness"
						Value="2" />
			</Trigger>
			<Trigger Property="graphControls:GraphElementBehaviour.IsSemiHighlighted"
					 Value="True">
				<Setter Property="BorderBrush"
						Value="Yellow" />
				<Setter Property="BorderThickness"
						Value="2" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="graphControls:GraphElementBehaviour.IsSemiHighlighted"
							   Value="True" />
					<Condition Property="graphControls:GraphElementBehaviour.SemiHighlightInfo"
							   Value="Source" />
				</MultiTrigger.Conditions>
				<Setter Property="BorderBrush"
						Value="Red" />
				<Setter Property="BorderThickness"
						Value="2" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="graphControls:GraphElementBehaviour.IsSemiHighlighted"
							   Value="True" />
					<Condition Property="graphControls:GraphElementBehaviour.SemiHighlightInfo"
							   Value="Target" />
				</MultiTrigger.Conditions>
				<Setter Property="BorderBrush"
						Value="Blue" />
				<Setter Property="BorderThickness"
						Value="2" />
			</MultiTrigger>
		</Style.Triggers>
	</Style>
	
	<Style TargetType="{x:Type graphControls:EdgeControl}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type graphControls:EdgeControl}">
					<Canvas>
						<Path Stroke="{TemplateBinding Foreground}"
							  StrokeThickness="{TemplateBinding StrokeThickness}"
							  Fill="{TemplateBinding Fill}"
							  MinWidth="1"
							  MinHeight="1"
							  ToolTip="{TemplateBinding ToolTip}"
							  x:Name="edgePath">
							<Path.Data>
								<PathGeometry>
									<PathGeometry.Figures>
										<MultiBinding Converter="{StaticResource RouteToPathConverter}">
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
													 Path="Source.(graphControls:GraphCanvas.X)" />
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
													 Path="Source.(graphControls:GraphCanvas.Y)" />
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
													 Path="Source.ActualWidth" />
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
													 Path="Source.ActualHeight" />
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
													 Path="Target.(graphControls:GraphCanvas.X)" />
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
													 Path="Target.(graphControls:GraphCanvas.Y)" />
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
													 Path="Target.ActualWidth" />
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
													 Path="Target.ActualHeight" />
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
													 Path="RoutePoints" />
										</MultiBinding>
									</PathGeometry.Figures>
								</PathGeometry>
							</Path.Data>
						</Path>
						<graphControls:EdgeContentPresenter Content="{TemplateBinding Edge}" />
					</Canvas>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="graphControls:GraphElementBehaviour.HighlightTrigger"
				Value="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" />
		<Setter Property="MinWidth"
				Value="1" />
		<Setter Property="MinHeight"
				Value="1" />
		<Setter Property="Background"
				Value="Red" />
		<Setter Property="Foreground"
				Value="Silver" />
		<Setter Property="Opacity"
				Value="0.5" />
		<Style.Triggers>
			<Trigger Property="graphControls:GraphElementBehaviour.IsHighlighted"
					 Value="True">
				<Setter Property="Foreground"
						Value="Black" />
			</Trigger>
			<Trigger Property="graphControls:GraphElementBehaviour.IsSemiHighlighted"
					 Value="True">
				<Setter Property="Foreground"
						Value="Yellow" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="graphControls:GraphElementBehaviour.IsSemiHighlighted"
							   Value="True" />
					<Condition Property="graphControls:GraphElementBehaviour.SemiHighlightInfo"
							   Value="InEdge" />
				</MultiTrigger.Conditions>
				<Setter Property="Foreground"
						Value="Red" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="graphControls:GraphElementBehaviour.IsSemiHighlighted"
							   Value="True" />
					<Condition Property="graphControls:GraphElementBehaviour.SemiHighlightInfo"
							   Value="OutEdge" />
				</MultiTrigger.Conditions>
				<Setter Property="Foreground"
						Value="Blue" />
			</MultiTrigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>
