<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:ext="clr-namespace:DependsOnThat.Views.Behaviours"
					xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
					xmlns:vstheming="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Imaging"
					mc:Ignorable="d">

	<Style x:Key="PinCheckBoxStyle"
		   TargetType="CheckBox">
		<Setter Property="Width"
				Value="16" />
		<Setter Property="Height"
				Value="16" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CheckBox">
					<Border Background="Transparent">
						<Path x:Name="PinCheckBoxPath"
							  Fill="{TemplateBinding Foreground}"
							  Opacity="0"
							  Margin="3"
							  HorizontalAlignment="Left"
							  VerticalAlignment="Top" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked"
								 Value="True">
							<Setter TargetName="PinCheckBoxPath"
									Property="Data"
									Value="F1M4,8L4,5 1,5 1,4 2,4 2,1 2,0 7,0 7,1 7,4 8,4 8,5 5,5 5,8 4,8z M3,1L3,4 5,4 5,1 3,1z" />
							<Setter TargetName="PinCheckBoxPath"
									Property="Opacity"
									Value="1" />
						</Trigger>
						<Trigger Property="IsChecked"
								 Value="False">
							<Setter TargetName="PinCheckBoxPath"
									Property="Data"
									Value="F1M0,4L3,4 3,1 4,1 4,2 7,2 8,2 8,7 7,7 4,7 4,8 3,8 3,5 0,5 0,4z M7,3L4,3 4,5 7,5 7,3z" />
						</Trigger>
						<Trigger Property="ext:PinCheckBoxBehaviour.ForceShow"
								 Value="True">
							<Setter TargetName="PinCheckBoxPath"
									Property="Opacity"
									Value="1" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="HighlightCheckBoxStyle"
		   TargetType="CheckBox">
		<Setter Property="Padding"
				Value="2" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CheckBox">
					<Border x:Name="border"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Background="Transparent"
							BorderThickness="1">
						<ContentPresenter Margin="{TemplateBinding Padding}"
										  Focusable="False" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked"
								 Value="True">
							<Setter Property="Background"
									TargetName="border"
									Value="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarSelectedKey}}" />
							<Setter Property="vstheming:ImageThemingUtilities.ImageBackgroundColor"
									TargetName="border"
									Value="{DynamicResource {x:Static vsshell:VsColors.CommandBarSelectedKey}}" />
							<Setter Property="BorderBrush"
									TargetName="border"
									Value="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarSelectedBorderKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter Property="Background"
									TargetName="border"
									Value="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarMouseOverBackgroundGradientKey}}" />
							<Setter Property="vstheming:ImageThemingUtilities.ImageBackgroundColor"
									TargetName="border"
									Value="{DynamicResource {x:Static vsshell:VsColors.CommandBarMouseOverBackgroundMiddle1Key}}" />
							<Setter Property="BorderBrush"
									TargetName="border"
									Value="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarBorderKey}}" />
						</Trigger>
						<Trigger Property="IsPressed"
								 Value="true">
							<Setter Property="Background"
									TargetName="border"
									Value="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarMouseDownBackgroundGradientKey}}" />
							<Setter Property="vstheming:ImageThemingUtilities.ImageBackgroundColor"
									TargetName="border"
									Value="{DynamicResource {x:Static vsshell:VsColors.CommandBarMouseDownBackgroundMiddleKey}}" />
							<Setter Property="BorderBrush"
									TargetName="border"
									Value="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarBorderKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
